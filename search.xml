<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo搭建个人专属博客的全方位导航</title>
    <url>/HEXO_Blog.html</url>
    <content><![CDATA[<p><img src="https://i.loli.net/2019/11/28/7sTxnziabItpmYW.jpg" alt="hexo-themes.jpg"></p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote>
<p>这是一篇关于搭建自己HEXO博客的心路历程文章，讲述自己搭建博客的原因及HEXO博客部署教程导航、HEXO主题美化导航……</p>
</blockquote>
<a id="more"></a>  

<p>高中时注意到语文老师喜欢用博客来记录生活的一点一滴，发表自己对一些问题的思考时，有一丝羡慕。经常时不时跑到<a href="http://blog.sina.com.cn/ckyy007" target="_blank" rel="external nofollow noopener noreferrer">想念魏晋的博客</a>上看看有没有发表什么新东西，像粉丝催更似得。有搭建自己博客的念头，但迟迟没有搭建自己的博客。<br>有多个原因：</p>
<ul>
<li>忙于学业，无暇顾及</li>
<li>没有记录生活写文章的习惯</li>
<li>维护博客过于繁琐</li>
<li>CDNS、简书、WordPress、博客园等诸多种搭建博客的方式挑的我头晕眼花。</li>
<li>……</li>
</ul>
<h2 id="为什么要搭建自己的博客"><a href="#为什么要搭建自己的博客" class="headerlink" title="为什么要搭建自己的博客"></a>为什么要搭建自己的博客</h2><p>到了大学后学业更加忙碌，目前到大三学习了很多知识，生活中经历了很多故事，但常常我们会遇到很多类似的情况：</p>
<ul>
<li>记得自己做过某件事，但却想不起来了</li>
<li>某些事情/技术 自己曾经钻研过，现在重新拿起来缺几乎忘得一干二净，重新拾起还需要在百度里转转悠悠找教程。</li>
<li>生活中突然有很多激动人心想法，没有及时记录，转念就想不起来了</li>
</ul>
<p><strong>没错，促使我搭建博客的原因就是自己的记性不好！！！</strong>  </p>
<p>这个问题相信你已经有了自己的答案，但我还是建议你看看这篇文章</p>
<blockquote>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/19743861?columnSlug=cnfeat" target="_blank" rel="external nofollow noopener noreferrer">为什么你要写博客？</a></li>
</ul>
</blockquote>
<p>当我终于意识到“记录”的重要性时，已经失去了很多。不过我还年轻！为时不晚！于是重燃用博客记录生活的想法。于是我开始寻找搭建属于自己博客的方法。</p>
<h2 id="搭建博客的渠道"><a href="#搭建博客的渠道" class="headerlink" title="搭建博客的渠道"></a>搭建博客的渠道</h2><p>搭建博客之前，如果你想了解更多背景知识，可以看看这篇文章：</p>
<blockquote>
<ul>
<li><a href="https://www.jianshu.com/p/0c3663c4f0ef" target="_blank" rel="external nofollow noopener noreferrer">搭建个人博客，你需要知道这些</a></li>
</ul>
</blockquote>
<p>通常来说，建立博客的通常渠道包括以下3种：</p>
<ul>
<li>在博客平台上注册，比如 博客园、CSDN、新浪博客 等。</li>
<li>利用博客框架搭建，如 WordPress、Jekyll、hexo 等。</li>
<li>自己用代码写一个。</li>
</ul>
<p>其中，第一种最简单，也最受限，说不定还会被删帖删号（我就遇到过这种情况）。第二种稍复杂，另外需要自己找部署的服务器，但可定制化较高，是很多人的选择。最后一种，是在重复造轮子，不过从另一个方面来看，倒是锻炼编程能力的好方式。</p>
<p>搭建众多博客园例如：简述、博客园、CSDN、新浪等博客平台让我挑的头晕眼花。经过查阅注意到一些博客平台渐渐衰落，并鉴于语文老师经常发一些“自己博客因为敏感字被新浪吞了！”“自己写的一些博客莫名其妙消失”之类的话，我意识到靠大平台一键生成博客的方法是不可靠的，还是自己能掌控的东西比较放心！于是我选择用第二种方式，既不受限，难度也不大。</p>
<blockquote>
<p>或许你不相信，但我确实见过有许多非互联网行业的人也搭建了自己的博客。所以在搭建博客这件事上，确实没有专业之分。</p>
</blockquote>
<h2 id="为什么选择GithubPages、Coding和Hexo"><a href="#为什么选择GithubPages、Coding和Hexo" class="headerlink" title="为什么选择GithubPages、Coding和Hexo"></a>为什么选择GithubPages、Coding和Hexo</h2><ul>
<li>Hexo是开源在Github上的，而且轻快便捷</li>
<li>GitHub Pages 有 300M 免费空间，资料自己管理，保存可靠。</li>
<li>学着用 GitHub，享受 GitHub 的便利，上面有很多大牛，眼界会开阔很多</li>
<li>顺便看看 GitHub 工作原理，掌握代码的管理方法</li>
<li>GitHub 是趋势</li>
</ul>
<h3 id="HEXO"><a href="#HEXO" class="headerlink" title="HEXO"></a>HEXO</h3><p>Hexo 是一个简单、快速、强大的静态博客框架，基于Node.js。由台湾大学生tommy351创建。并把它开源到了Github上，这里是它在Github上的地址：<a href="https://github.com/hexojs/hexo" target="_blank" rel="external nofollow noopener noreferrer">HexoGithub</a>，它主要有以下优点：</p>
<ul>
<li>极速生成静态页面</li>
<li>一键部署博客</li>
<li>丰富的插件支持</li>
<li>支持 Markdown<br>更多内容可以查看Hexo的官方文档，建议你只看看介绍部分，其它的你现在也看不太懂。等你搭建好了博客再去详细了解其他的内容就会轻松很多：<a href="https://hexo.io/docs/" target="_blank" rel="external nofollow noopener noreferrer">Hexdocs</a></li>
</ul>
<h3 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h3><p>GitHub是一个代码托管网站和社交编程网站。这里聚集了世界上各路技术牛叉的大牛，和最优秀的代码库。是全球程序员的天堂。因为是国外的，所以界面全是英文。本熊英语过了六级刚开始接触的时候心都突突，不过不要怕，不是还有翻译么。</p>
<h3 id="GitHub-Pages"><a href="#GitHub-Pages" class="headerlink" title="GitHub Pages"></a>GitHub Pages</h3><p>GitHub Pages是用来托管 GitHub 上静态网页的免费站点，其他的不多说。</p>
<h3 id="Coding"><a href="#Coding" class="headerlink" title="Coding"></a>Coding</h3><p>和Github功能类似，由于是国内的，界面都是中文，对我这种英语渣渣很是友好，2018年Coding被腾讯收购后界面变得更加美观，操作方便，还开发了一个Cloud Studio在线IDE ，其对应的Codinging　Page也可以实现和Github Pages相似的功能。</p>
<h1 id="HEXO博客的搭建、部署、NEXT主题个性化教程导航"><a href="#HEXO博客的搭建、部署、NEXT主题个性化教程导航" class="headerlink" title="HEXO博客的搭建、部署、NEXT主题个性化教程导航"></a>HEXO博客的搭建、部署、NEXT主题个性化教程导航</h1><p>看完上面一部分，可以说对搭建博客有了初步的了解，这里把搭建博客步骤大致浓缩成几句话：</p>
<ol>
<li>在本地安装Git、Node.js、HEXO等基本环境</li>
<li>用HEXO框架本地生成自己的博客代码</li>
<li>通过hexo命令借助git将博客代码上传到Coding和Github的仓库中</li>
<li>借助Github Pages和Coding Pages将仓库中的博客代码生成自己的在线博客网页。</li>
</ol>
<p>如果学有余力，可以在进行下面几步进行自己博客的优化</p>
<ol start="4">
<li>购买个人域名，自定义自己的博客网址，双线解析到Coding Pages和Github Pages。</li>
<li>为自己的博客设置主题，并逐渐个性化——本熊用的是比较简洁大方的NEXT主题</li>
</ol>
<p>本文不会详细列出每一步的具体步骤，只会给出大致框架并给一些导航。导航网址中的内容详细的介绍了每一步的具体步骤，让大家少走一些弯路。也非常感谢这里导航的up提供的各式各样的教程。是时候培养自己的动手能力和阅读能力了，学以致用！</p>
<h2 id="git的学习"><a href="#git的学习" class="headerlink" title="git的学习"></a>git的学习</h2><p>在搭建博客之前，墙裂建议先学习git的使用方法，因为在大二的时候尝试自己搭建过HEXO博客，起初还好，但是到了个性化博客主题的时候，贪婪加了太多个性化的代码，导致某些未知BUG，想改也改不回来了。<br>如果学会使用git，每次修改小部分代码，提交到仓库中。如果发现代码错了，可以非常方便的将代码回退到提交之前的样子。<br>廖雪峰老师有很多好用的教程，非常推荐大家学习。</p>
<blockquote>
<ul>
<li><a href="https://www.liaoxuefeng.com/wiki/896043488029600/896202815778784" target="_blank" rel="external nofollow noopener noreferrer">廖雪峰老师的课堂：git的诞生</a></li>
</ul>
</blockquote>
<p>学会使用Git后会发现git的代码界面非常不友好，本身自带的GUI功能也非常差，现在推荐一个非常好用的git的GUI——Fork</p>
<blockquote>
<ul>
<li><a href="https://git-fork.com/" target="_blank" rel="external nofollow noopener noreferrer">Fork下载地址</a></li>
</ul>
</blockquote>
<p>其将git命令操作界面化，十分高效。本熊的博客代码历史版本及提交记录全部都记录在当中。<br><img src="https://i.loli.net/2019/11/28/CzEvgtc1HnaAjGk.png" alt="quicker_55730349-28e4-49cb-ac88-723528092924.png"></p>
<h2 id="生成与部署"><a href="#生成与部署" class="headerlink" title="生成与部署"></a>生成与部署</h2><blockquote>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/26625249?utm_source=qq&utm_medium=social" target="_blank" rel="external nofollow noopener noreferrer">本地生成HEXO博客与部署到Github Pages</a></li>
<li><a href="https://blog.csdn.net/qintian888/article/details/82195097" target="_blank" rel="external nofollow noopener noreferrer">github与coding同步部署博客</a></li>
<li><a href="https://blog.csdn.net/qq_36759224/article/details/100879609" target="_blank" rel="external nofollow noopener noreferrer">Hexo 双线部署到 Coding Pages 和 GitHub Pages 并实现全站 HPPTS：</a></li>
</ul>
</blockquote>
<h2 id="个性化主题——基于NEXT主题"><a href="#个性化主题——基于NEXT主题" class="headerlink" title="个性化主题——基于NEXT主题"></a>个性化主题——基于NEXT主题</h2><p>当阅读多了，你会发现下面的很多教程大多都是基于修改站点和主题的congfig配置文件来实现个性化的，每个配置代码上面都会有相关的链接和github代码库，详细阅读其中的README文件，可以完全不用看下面的导航，自己动手丰衣足食。</p>
<p>关于个性化设置，我想多说的是</p>
<ul>
<li>个性化固然好，但是在设置的时候一定要细心，这些都是要打开代码文件去修改的</li>
<li>虽然个性化是可以让你的博客看起来高大上许多，但是不要太过了。忘了自己搭建博客的初心，只有文章才是最重要的。</li>
<li>强烈建议： 将博客源文件用git托管</li>
</ul>
<p>主题的使用：</p>
<blockquote>
<ul>
<li><a href="https://www.lnrcoder.cn/hexo/hexo-next-theme.html" target="_blank" rel="external nofollow noopener noreferrer">使用 NexT 主题</a></li>
</ul>
</blockquote>
<p>个性化设置：</p>
<blockquote>
<ul>
<li><a href="https://www.lnrcoder.cn/hexo/hexo-next-theme-optimization.html" target="_blank" rel="external nofollow noopener noreferrer">Next v7.4.1主题的个性化</a></li>
<li><a href="https://blog.csdn.net/weixin_39345384/article/details/80785373" target="_blank" rel="external nofollow noopener noreferrer">Next主题更多个性化设置</a></li>
<li><a href="https://blog.ynxiu.com/2016/hexo-next-theme-optimize.html" target="_blank" rel="external nofollow noopener noreferrer">代码块自定义样式</a></li>
<li><a href="https://vonsdite.cn/posts/c6c725f5.html" target="_blank" rel="external nofollow noopener noreferrer">自定义是否显示TOC的自动编号</a></li>
<li><a href="https://vonsdite.cn/posts/6c0dbfd2.html" target="_blank" rel="external nofollow noopener noreferrer">TOC设置成不是逐级展开</a></li>
</ul>
</blockquote>
<p>博客网页的优化：</p>
<blockquote>
<ul>
<li><a href="https://www.lnrcoder.cn/hexo/hexo-next-seo.html" target="_blank" rel="external nofollow noopener noreferrer">SEO 优化</a></li>
<li><a href="https://www.jianshu.com/p/8c0707ce5da4" target="_blank" rel="external nofollow noopener noreferrer">Hexo博客收录百度和谷歌</a></li>
<li><a href="https://yfzhou.coding.me/2018/09/17/Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88Hexo%E5%8D%9A%E5%AE%A2%E5%A4%87%E4%BB%BD%EF%BC%89/" target="_blank" rel="external nofollow noopener noreferrer">gulp 4.0实现静态资源压缩</a></li>
</ul>
</blockquote>
<p>第三方插件：</p>
<blockquote>
<ul>
<li><a href="https://yfzhou.coding.me/2018/08/08/Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E9%9B%86%E6%88%90DaoVoice%E5%9C%A8%E7%BA%BF%E8%81%94%E7%B3%BB%E5%8A%9F%E8%83%BD%EF%BC%89/" target="_blank" rel="external nofollow noopener noreferrer">集成DaoVoice在线联系功能</a></li>
<li><a href="https://blog.csdn.net/yjwan521/article/details/80899992" target="_blank" rel="external nofollow noopener noreferrer">sidebar添加网易云音乐播放器</a></li>
<li><a href="https://yfzhou.coding.me/2018/08/08/Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E6%B7%BB%E5%8A%A0%E7%BD%91%E9%A1%B5%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8%E5%8A%9F%E8%83%BD%EF%BC%89/" target="_blank" rel="external nofollow noopener noreferrer">Hexo-Next搭建个人博客（添加网页音乐播放器功能）</a></li>
<li><a href="http://www.netcan666.com/2016/07/14/Hexo%E4%BC%98%E5%8C%96%E4%B9%8B%E9%98%85%E8%AF%BB%E8%BF%9B%E5%BA%A6%E6%9D%A1%E3%80%81Ajax%E3%80%81%E9%9F%B3%E4%B9%90%E7%9B%92/" target="_blank" rel="external nofollow noopener noreferrer">Hexo优化之阅读进度条、Ajax、音乐盒</a></li>
<li><a href="https://vonsdite.cn/posts/c7d98860.html" target="_blank" rel="external nofollow noopener noreferrer">Hexo Next 使用Valine作评论系统</a></li>
<li><a href="https://vonsdite.cn/posts/fbd1f97f.html" target="_blank" rel="external nofollow noopener noreferrer">Hexo Next 添加萌萌的宠物live2d</a></li>
</ul>
</blockquote>
<p>其他教程：</p>
<blockquote>
<ul>
<li><a href="https://yfzhou.coding.me/2018/08/27/Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96%EF%BC%89/" target="_blank" rel="external nofollow noopener noreferrer">RSS及好玩的写作样式</a></li>
<li><a href="https://yfzhou.coding.me/2018/08/17/Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BA%8A%EF%BC%89/" target="_blank" rel="external nofollow noopener noreferrer">使用图床</a></li>
</ul>
</blockquote>
<h1 id="最终成果"><a href="#最终成果" class="headerlink" title="最终成果"></a>最终成果</h1><blockquote>
<ul>
<li><a href="https://a767251930.github.io/" target="_blank" rel="external nofollow noopener noreferrer">朽熊博客——备用</a></li>
</ul>
</blockquote>
<p>虽然搭建博客花了好几天的时间，但是很有满足感。</p>
<p><strong>希望自己今后不辜负这次的辛苦付出，认真记录自己的生活！</strong></p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown的使用方法</title>
    <url>/Markdown_method.html</url>
    <content><![CDATA[<p><img src="https://i.loli.net/2019/11/27/UnBYXSCcQi13t4q.jpg" alt="Markdown_method.jpg"></p>
<h1 id="Markdown是什么？"><a href="#Markdown是什么？" class="headerlink" title="Markdown是什么？"></a>Markdown是什么？</h1><p>Markdown是一种「标记语言」，通常为程序员群体所用。除此之外，Markdown也是国际杂志编辑以及许多写作者都广泛使用的标记语言。</p>
<p>本熊博客建站初入门，博客的所有文章都将使用这一语言写成。</p>
<a id="more"></a>  

<h1 id="为什么要用Markdown？"><a href="#为什么要用Markdown？" class="headerlink" title="为什么要用Markdown？"></a>为什么要用Markdown？</h1><p><strong>举个例子解释</strong></p>
<p>大部分作家都是用 Word 或 Pages 写作，过去的文档也大都以微软的 .doc, .docx 格式或是苹果的 Pages 格式储存。还有人为了保证文稿发给谁都能正常打开，会用 .txt 格式。</p>
<p>但是.doc 或 Pages 格式有如下问题：</p>
<ul>
<li><p>1.不一定谁都能打开。用 Windows 的人打不开苹果的 .pages 文件，用旧版 Word 的人不一定能打开你用新版 Word 写的稿子。</p>
</li>
<li><p>2.对方看到的稿子的样子和你自己看到的可能差别很大。</p>
</li>
<li><p>3.大部分人电脑上的Office都是盗版的，使用时很容易出问题。</p>
</li>
<li><p>4.用.txt 写的稿子没有格式，这就给编辑你文章的人带来困扰了。</p>
</li>
</ul>
<p>到大学时我们会发现用Latex语言代码生成的论文既美观又简洁，那么写普通的博客呢？<strong>这就是 Markdown 登场的时候了。</strong></p>
<p><strong>千万不要被「标记」、「语言」吓到，Markdown的语法十分简单，常用的标记符号不超过十个，用于日常写作记录绰绰有余，不到半小时就能完全掌握。</strong></p>
<p><strong>但就是这十个不到的标记符号，却能让人优雅地沉浸式记录，专注内容而不是纠结排版，达到「心中无尘，码字入神」的境界。</strong></p>
<h2 id="Markdown-的优点"><a href="#Markdown-的优点" class="headerlink" title="Markdown 的优点"></a>Markdown 的优点</h2><p>纯文本，所以兼容性极强，可以用所有文本编辑器打开。</p>
<p>兼顾了「什么人都能打开」和「样式」。Markdown 就是纯文本，就是 .txt，所以什么人都能打开。而如上所述，你可以用它来标记文本的样式，而且语法非常简单。<br>由于是纯文本，Markdown 文稿也不会因为未来软件升级而产生不同版本之间的兼容问题，即，不会出现「我这篇稿子是用旧版 Word 写的，你用新版 Word 看可能格式会有点问题」的情况。</p>
<p>让你专注于文字而不是排版。</p>
<p>格式转换方便，Markdown 的文本你可以轻松转换为 html、电子书等。</p>
<p>Markdown 转 HTML 非常方便。HTML 是整个万维网（web）的标记语言，但更重要的是，它也是目前主流电子书格式所用的标记语言。无论是 EPUB, mobi，还是 Kindle 用的专有格式 .azw，都只是把一堆 HTML 文件打包而已。如果你写的是书，用 Markdown 标注格式之后，可以很方便地转为以上格式（当然这个转换工作不需要由你来做）；如果你写的是单篇的文章（例如新闻报道或专栏），未来也不排除结集出书的可能。若采用 Markdown，对于日后的文件转换工作也大有裨益。<br>如何开始用 Markdown？继续用你习惯的写作软件即可。记事本、Word、Pages 都没问题，但请记得存成纯文本格式。就这么简单。</p>
<p>Markdown 的标记语法有极好的可读性。</p>
<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><p>这是最为常用的格式，在平时常用的的文本编辑器中大多是这样实现的：输入文本、选中文本、设置标题格式。</p>
<p>而在 Markdown 中，你只需要在文本前面加上 # 即可，同理、你还可以增加二级标题、三级标题、四级标题、五级标题和六级标题，总共六级，只需要增加 # 即可，标题字号相应降低。</p>
<p>例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<blockquote>
<h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6></blockquote>
<p>注：# 和「一级标题」之间建议保留一个字符的空格，这是最标准的 Markdown 写法。标题只有六个级别</p>
<h1 id="分段换行"><a href="#分段换行" class="headerlink" title="分段换行"></a>分段换行</h1><p>换行有多种办法，这里只举三个简单的：</p>
<ol>
<li>换行：<ul>
<li>两段文字之间敲两个或以上的空格符</li>
<li>两段文字之间添加标签<code>&lt;br/&gt;</code>或<code>&lt;/br&gt;</code></li>
</ul>
</li>
<li>分段：<ul>
<li>两段文字之间空一行</li>
</ul>
</li>
</ol>
<h1 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h1><p>几种特殊强调字体：粗体、斜体、粗斜体、删除线。</p>
<p>例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*这是斜体*</span><br><span class="line">**这是粗体**</span><br><span class="line">***这是斜体加粗体***</span><br><span class="line">~~这是删除线~~</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<blockquote>
<p><em>这是斜体</em><br><strong>这是粗体</strong><br><strong><em>这是斜体加粗体</em></strong><br><del>这是删除线</del></p>
</blockquote>
<h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><p>列表格式也很常用，在 Markdown 中，你只需要在文字前面加上 <code>-</code>、<code>+</code>、<code>-</code> 任意一个就可以了，还可以按Tab建进行嵌套。</p>
<p>例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- 文本1</span><br><span class="line">    - 文本2</span><br><span class="line">        - 文本3</span><br><span class="line">* 文本4</span><br><span class="line">+ 文本5</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<blockquote>
<ul>
<li>文本1<ul>
<li>文本2<ul>
<li>文本3</li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li>文本4</li>
</ul>
<ul>
<li>文本5</li>
</ul>
</blockquote>
<p>如果你希望有序列表，<br>也可以在文字前面加上 1. 2. 3. 就可以了。</p>
<p>例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 文本1</span><br><span class="line">   1. 文本2</span><br><span class="line">   2. 文本3</span><br><span class="line">2. 文本3</span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<blockquote>
<ol>
<li>文本1<ol>
<li>文本2</li>
<li>文本3</li>
</ol>
</li>
<li>文本3</li>
</ol>
</blockquote>
<p>注：-、1. 和文本之间要保留一个字符的空格。</p>
<h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><p>在我们写作的时候经常需要引用他人的文字，这个时候引用这个格式就很有必要了，在 Markdown 中，你只需要在你希望引用的文字前面加上 <code>&gt;</code> 就好了。</p>
<p>例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;欢迎关注“朽熊的博客”  </span><br><span class="line">&gt;鲁迅说过：</span><br><span class="line">&gt;&gt;悲剧将人生的有价值的东西毁灭给人看，喜剧将那无价值的撕破给人看。</span><br></pre></td></tr></table></figure>

<p>注：&gt; 和文本之间要保留一个字符的空格。</p>
<p>最终显示的就是：</p>
<blockquote>
<p>欢迎关注“朽熊的博客”<br>鲁迅说过：</p>
<blockquote>
<p>悲剧将人生的有价值的东西毁灭给人看，喜剧将那无价值的撕破给人看。</p>
</blockquote>
</blockquote>
<h1 id="线条"><a href="#线条" class="headerlink" title="线条"></a>线条</h1><p>在markdown语法中,一行连用三个或者三个以上的星号,减号,或者下划线,就可以表示分割线.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">***</span><br><span class="line">---</span><br><span class="line">___</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<blockquote>
<hr>
<hr>
<hr>
</blockquote>
<h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><h2 id="短代码"><a href="#短代码" class="headerlink" title="短代码"></a>短代码</h2><p>在一般的段落文字中，可以使用反引号　<br><code>`  （~ 键）</code><br> 来标记或插入代码区段。</p>
<p>例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C语言里的函数 `scanf()` 怎么使用？</span><br><span class="line">这样可以引用反引号　`` ` ``</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<blockquote>
<p>C语言里的函数 <code>scanf()</code> 怎么使用？<br>这样可以引用反引号　<code>`</code>　</p>
</blockquote>
<h2 id="多行代码"><a href="#多行代码" class="headerlink" title="多行代码"></a>多行代码</h2><ul>
<li>在需要高亮的代码块的前一行及后一行使用三个或以上的反引号 <code>```</code></li>
<li>同时第一行反引号后面，输入代码块所使用的语言，实现代码高亮。</li>
</ul>
<p>比如高亮 <code>python3</code> 代码块  </p>
<p>例如：</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">```python</span><br><span class="line">#!/usr/bin/env python3</span><br><span class="line">print(&quot;Hello, World!&quot;);</span><br><span class="line">```</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line">print(<span class="string">"Hello, World!"</span>);</span><br></pre></td></tr></table></figure>


<h1 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h1><p>在 Markdown 中，插入链接不需要其他按钮，你只需要使用 <a href="链接地址">显示文本</a> 这样的语法即可。</p>
<p>例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[朽熊的博客](https://hxear.top)</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<blockquote>
<p><a href="https://hxear.top">朽熊的博客</a></p>
</blockquote>
<h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p>在 Markdown 中，插入图片不需要其他按钮，你只需要使用 [图片名]（图片地址） 这样的语法即可。</p>
<p>例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![本文章标题图](https://i.loli.net/2019/11/27/UnBYXSCcQi13t4q.jpg)</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<blockquote>
<p><img src="https://i.loli.net/2019/11/27/UnBYXSCcQi13t4q.jpg" alt="本文章标题图"></p>
</blockquote>
<p>注：插入图片的语法和链接的语法很像，只是前面多了一个 !<br>图片地址可以用本地图片，也可以使用图床。<br>本熊这里用的是SM.MS图床，配合上效率工具Quicker的插件调用SM.MS的API，可以快速将本地图片或者剪板贴中的图片上传图片到图床<br><img src="https://i.loli.net/2019/11/28/uGDRwyL6czrNPxl.png" alt="quicker_1777c169-a2ae-4017-87b1-54d1c6b67797.png"></p>
<h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><p>使用 <code>|</code>来分隔不同的单元格，使用 - 来分隔表头和其他行：</p>
<p>为了美观，可以使用空格对齐不同行的单元格，并在左右两侧都使用 | 来标记单元格边界：</p>
<p>在表头下方的分隔线标记中加入 :，即可标记下方单元格内容的对齐方式：</p>
<ul>
<li>:— 代表左对齐</li>
<li>:–: 代表居中对齐</li>
<li>—: 代表右对齐</li>
</ul>
<p>相关代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">| Tables        |      Are      |  Cool |</span><br><span class="line">| ------------- | :-----------: | ----: |</span><br><span class="line">| col 3 is      | right-aligned | $1600 |</span><br><span class="line">| col 2 is      |   centered    |   $12 |</span><br><span class="line">| zebra stripes |   are neat    |    $1 |</span><br></pre></td></tr></table></figure>
<p>效果如下：<br> | Tables        |      Are      |  Cool |<br> | ————- | :———–: | —-: |<br> | col 3 is      | right-aligned | $1600 |<br> | col 2 is      |   centered    |   $12 |<br> | zebra stripes |   are neat    |    $1 |</p>
<h1 id="代办清单To-do-List"><a href="#代办清单To-do-List" class="headerlink" title="代办清单To-do List"></a>代办清单To-do List</h1><p>你可以在Markdown中编写代办清单</p>
<p>相关代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- [x] 已完成项目1</span><br><span class="line">  - [x] 已完成事项</span><br><span class="line">  - [ ] 代办事项</span><br><span class="line">- [ ] 代办项目2</span><br><span class="line">- [ ] 代办项目3</span><br></pre></td></tr></table></figure>

<p>效果如下:</p>
<blockquote>
<ul>
<li><input checked disabled type="checkbox"> 已完成项目1<ul>
<li><input checked disabled type="checkbox"> 已完成事项</li>
<li><input disabled type="checkbox"> 代办事项</li>
</ul>
</li>
<li><input disabled type="checkbox"> 代办项目2</li>
<li><input disabled type="checkbox"> 代办项目3</li>
</ul>
</blockquote>
<h1 id="Mrkdown编辑器"><a href="#Mrkdown编辑器" class="headerlink" title="Mrkdown编辑器"></a>Mrkdown编辑器</h1><p>本熊大学专业读的物理，最喜欢的事情就是用最少的东西做最多的事，VS Code编辑器满足了我大部分的使用需求，他其中还有许多插件</p>
<p>直接在他的插件中心搜索markdown就可以找到很多的插件</p>
<p>最受推荐的插件：markdown-all-in-one</p>
<p>在所有拓展插件中，这个插件基础功能最全，快捷键多，方便使用。其中也包含latex公式编辑（具体看2.8），但是能否完全有效识别需要测试，笔者未做实验。</p>
<h1 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h1><p>markdown和html在语法上有类似的痛点<br>那就是一些想显示的符号最后都被识别成的语法标签。</p>
<p>这时就需要用<code>转移符号</code>来显示这些符号</p>
<p>其实非常简单，只需要在想显示的符号前面加个　<code>\</code>　就可以了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\[\] 中括号</span><br><span class="line">\(\) 小括号</span><br><span class="line">\# 井号</span><br><span class="line">\+ 加号</span><br><span class="line">\- 减号</span><br><span class="line">\. 英文句号</span><br><span class="line">\! 感叹号</span><br><span class="line">\` 反引号</span><br><span class="line">…</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
</search>
